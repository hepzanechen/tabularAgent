# Model Engine Configuration
# Defines available model engines, their parameters, and tuning options

engines:
  # Random Forest Engine
  sklearnRandomForest:
    class: SklearnRandomForest
    description: "Random Forest classifier/regressor with ensemble learning"
    default_params:
      n_estimators: 100
      max_depth: null
      min_samples_split: 2
      min_samples_leaf: 1
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        n_estimators: [50, 100, 200]
        max_depth: [10, 20, null]
        min_samples_split: [2, 5, 10]
        min_samples_leaf: [1, 2, 4]
  
  # Ridge Regression/Classification Engine
  sklearnRidge:
    class: SklearnRidge
    description: "Ridge regression/classification with L2 regularization"
    default_params:
      alpha: 1.0
      fit_intercept: true
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        alpha: [0.1, 1.0, 10.0, 100.0]
        fit_intercept: [true, false]

  # Lasso Regression/Classification Engine
  sklearnLasso:
    class: SklearnLasso
    description: "Lasso regression/classification with L1 regularization"
    default_params:
      alpha: 1.0
      fit_intercept: true
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        alpha: [0.1, 1.0, 10.0, 100.0]
        fit_intercept: [true, false]

  # Elastic Net Engine
  sklearnElasticNet:
    class: SklearnElasticNet
    description: "Elastic Net regression with L1 and L2 regularization"
    default_params:
      alpha: 1.0
      l1_ratio: 0.5
      fit_intercept: true
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        alpha: [0.1, 1.0, 10.0]
        l1_ratio: [0.1, 0.5, 0.9]
        fit_intercept: [true, false]

  # Linear Regression/Logistic Regression Engine
  sklearnLinear:
    class: SklearnLinear
    description: "Linear/Logistic regression without regularization"
    default_params:
      fit_intercept: true
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        fit_intercept: [true, false]

  # Support Vector Machine Engine
  sklearnSVM:
    class: SklearnSVM
    description: "Support Vector Machine for regression/classification"
    default_params:
      C: 1.0
      kernel: "rbf"
      gamma: "scale"
      random_state: 42
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        C: [0.1, 1.0, 10.0]
        kernel: ["linear", "rbf", "poly"]
        gamma: ["scale", "auto", 0.1, 1.0]

  # K-Nearest Neighbors Engine
  sklearnKNN:
    class: SklearnKNN
    description: "K-Nearest Neighbors for regression/classification"
    default_params:
      n_neighbors: 5
      weights: "uniform"
      algorithm: "auto"
    
    tuning:
      method: "grid_search"
      cv: 5
      param_grid:
        n_neighbors: [3, 5, 7, 9]
        weights: ["uniform", "distance"]
        algorithm: ["auto", "ball_tree", "kd_tree"]

# Global model training configuration
training:
  test_size: 0.2
  cross_validation:
    cv: 5
    scoring: "auto"  # Will be determined based on problem type
  
  evaluation_metrics:
    regression: ["rmse", "mae", "r2"]
    classification: ["accuracy", "precision", "recall", "f1"]

# Default engine selection
defaults:
  regression: "sklearnRandomForest"
  classification: "sklearnRandomForest" 